kind: ConfigMap
apiVersion: v1
metadata:
  name: redis-config
  namespace: tfra-dev
  labels:
    k8s-app: redis-tfra
data:
  redis.conf: |-
    dir /srv
    port 6379
    bind 0.0.0.0
    appendonly yes 
    daemonize no
    requirepass admin
    pidfile /srv/redis-6379.pid
    maxclients 9999999

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: tfra-dev
  labels:
    k8s-app: redis-tfra
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: redis-tfra
  template:
    metadata:
      labels:
        k8s-app: redis-tfra
    spec:
      nodeSelector:
        train : "true"
        cpu: "true"
      containers:
      - name: redis
        image: ccr.ccs.tencentyun.com/cube-studio/redis:3.0.7
        command:
          - "sh"
          - "-c"
          - "redis-server /usr/local/redis/redis.conf"
        ports:
        - containerPort: 6379
        resources:
#          limits:
#            cpu: 10000m
#            memory: 20048Mi
          requests:
            cpu: 100m
            memory: 200Mi
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 300
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath:  /usr/local/redis/redis.conf
          subPath: redis.conf
      volumes:
      - name: config
        configMap:
          name: redis-config

---
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
  namespace: tfra-dev
  labels:
    k8s-app: redis-tfra
spec:
#  type: NodePort
  ports:
    - name: tcp
      port: 6379
      targetPort: 6379
#      nodePort: 30379
  selector:
    k8s-app: redis-tfra
